---

- name: Copy <manifests>.yml
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "~/"
    owner: root
    group: root
    mode: u=rw,g=r,o=
  with_fileglob:
    - "{{ role_path }}/files/*.yml"

- name: Deploy pod
  ansible.builtin.command: "kubectl -f ~/0-namespaces.yml apply"
  changed_when: false

- name: Check if ArgoCD is already running
  ansible.builtin.shell: source ~/.bashrc && helm ls
  args:
    executable: /bin/bash
  register: helm_ls
  changed_when: false

- name: Add helm repo for ArgoCD
  ansible.builtin.shell: source ~/.bashrc && helm repo add argo https://argoproj.github.io/argo-helm
  args:
    executable: /bin/bash
  when: helm_ls.stdout.find('argocd') == -1
  register: helm_command_output
  changed_when: "'skipping' not in helm_command_output.stdout"

- name: Update helm repo
  ansible.builtin.shell: source ~/.bashrc && helm repo update
  args:
    executable: /bin/bash
  when: helm_ls.stdout.find('argocd') == -1
  changed_when: false

- name: Install ArgoCD
  ansible.builtin.shell: source ~/.bashrc && helm install argo-cd argo/argo-cd -n argocd
  args:
    executable: /bin/bash
  when: helm_ls.stdout.find('argocd') == -1
  register: helm_command_output
  failed_when: "'INSTALLATION FAILED' in helm_command_output.stdout"
  changed_when: "'STATUS: deployed' in helm_command_output.stdout"

# Port forwarding:
# kubectl port-forward service/argocd-server -n argocd 8080:443
# Get admin password:
# kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d

- name: Deploy pod
  ansible.builtin.command: "kubectl -f ~/1-application.yml apply"
  changed_when: false

- name: Remove <manifests>.yml
  ansible.builtin.file:
    path: "{{ item | basename }}"
    state: absent
  with_fileglob:
    - "{{ role_path }}/files/*.yml"
